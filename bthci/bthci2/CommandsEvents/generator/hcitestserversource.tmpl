// Copyright (c) 2006-2010 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
// $FILENAME.cpp
// This file was generated automatically from the template hcitestserversource.tmpl
// on $GENERATE_TIME_STAMP
// Implementation of test step $CLASSNAME.
// 
//

/**
 @file 
 @internalComponent
*/

#include "$FILENAME.h"

$TEST_STEP_HEADERS

_LIT(KServerName, "$SERVERNAME");

$CLASSNAME* $CLASSNAME::NewL()
	{
	$CLASSNAME *server = new(ELeave) $CLASSNAME;
	CleanupStack::PushL(server);
	server->StartL(KServerName);
	CleanupStack::Pop(server);
	return server;
	}

$CLASSNAME::$CLASSNAME()
	{
	}

$CLASSNAME::~$CLASSNAME()
	{
	}
	
CTestStep* $CLASSNAME::CreateTestStep(const TDesC& aStepName)
	{
	$CREATE_TEST_STEP_IMPL
	}

static void MainL()
	{
	__UHEAP_MARK;
	CActiveScheduler* sched = new (ELeave) CActiveScheduler;
	CActiveScheduler::Install(sched);
	$CLASSNAME* server;
	
	TRAPD(err,server = $CLASSNAME::NewL());
	
	if(!err)
		{
		RProcess::Rendezvous(KErrNone);
		sched->Start();
		}
		
	delete sched;
	__UHEAP_MARKEND;
	}
	
TInt E32Main()
	{
	CTrapCleanup* cleanup = CTrapCleanup::New();

	if(cleanup == NULL)
		{
		return KErrNoMemory;
		}
	
	TRAP_IGNORE(MainL());
	delete cleanup;
	return KErrNone;
	}
