// Copyright (c) 2006-2010 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
// bt_v2.prt Bluetooth protocol family for use with HCI v2
// 
//

/**
 @file
*/

#include "../../../bluetoothmgmt/btcommon/config.cfg"

TARGET        bt_v2.prt
CAPABILITY    CommDD PowerMgmt ReadDeviceData WriteDeviceData TrustedUI ProtServ NetworkControl NetworkServices LocalServices ReadUserData WriteUserData
TARGETTYPE    DLL

UID    0x10003d38 0x1000961C
VENDORID 0x70000001


DEFFILE	      bt.def


SOURCEPATH .              // BT PRT

SOURCE btprt.cpp
SOURCE blogger.cpp  
SOURCE btsap.cpp
SOURCE btsockettimer.cpp
SOURCE IncomingConnListener.cpp
SOURCE RegistryHelpers.cpp
SOURCE codman.cpp

SOURCEPATH ../secman

SOURCE secman.cpp
SOURCE secmanhci.cpp
SOURCE btaccessrequester.cpp
SOURCE btaccessrequesterstatemachine.cpp
SOURCE oobdata.cpp
SOURCE simplepairingresult.cpp
SOURCE pairingserver.cpp

SOURCEPATH ../linkmgr		// The link manager layer

SOURCE linkmgr.cpp
SOURCE hostresolver.cpp
SOURCE linkutil.cpp
SOURCE BasebandModel.cpp
SOURCE SyncSap.cpp
SOURCE SCOSAP.cpp
SOURCE eSCOSAP.cpp
SOURCE ProxySAP.cpp
SOURCE ACLSAP.cpp
SOURCE VendorSAP.cpp
SOURCE RawConduit.cpp
SOURCE AcceptWatchdog.cpp
SOURCE Subscribers.cpp
SOURCE btcommands.cpp
SOURCE AclDataQ.cpp
SOURCE hostmbufpool.cpp
SOURCE AclDataQController.cpp
SOURCE bredrcontrollerconfiguration.cpp

SOURCE hcifacade.cpp
SOURCE hcifacade_commands.cpp
SOURCE hcifacade_events.cpp
SOURCE physicallinks.cpp
SOURCE PhysicalLinkHelper.cpp
SOURCE roleswitchhelper.cpp
SOURCE encryptionkeyrefreshhelper.cpp
SOURCE basebandsap.cpp
SOURCE physicallinksmanager.cpp
SOURCE physicallinkmetrics.cpp
SOURCE linkqitem.cpp
SOURCE linkmuxer.cpp
SOURCE pairingscache.cpp

SOURCE eirpublisherlocalname.cpp
SOURCE eirpublishertxpowerlevel.cpp

SOURCEPATH ../eirman			// The EIR Manager

SOURCE eirmanserver.cpp
SOURCE eirmansession.cpp
SOURCE eirmanager.cpp

SOURCEPATH ../l2cap				// The l2cap protocol

SOURCE l2cap.cpp
SOURCE l2sap.cpp
SOURCE l2signalmgr.cpp l2utils.cpp
SOURCE l2sapstates.cpp
SOURCE l2types.cpp

SOURCE L2CapPDU.cpp
SOURCE L2CapSDU.cpp
SOURCE L2CapSDUQueue.cpp
SOURCE L2CapDataController.cpp
SOURCE L2CapEnhancedDataController.cpp

SOURCE l2capSignalHandler.cpp
SOURCE l2capSAPSignalHandler.cpp
SOURCE l2capLinkSignalHandler.cpp
SOURCE l2capEntityConfig.cpp
SOURCE l2capCommand.cpp

SOURCE l2capSigPacketEcho.cpp
SOURCE l2capSigPacketConnection.cpp
SOURCE l2capSigPacketCommandReject.cpp
SOURCE l2capSigPacketConfigure.cpp
SOURCE l2capSigPacketDisconnection.cpp
SOURCE l2capSigPacketInformation.cpp
SOURCE L2CapChannelConfig.cpp
SOURCE L2CapFecNegotiator.cpp
SOURCE l2capSigStates.cpp
SOURCE l2capMuxController.cpp

SOURCE L2CapDebugControlInterface.cpp

SOURCEPATH ../rfcomm  			// The RFCOMM protocol

SOURCE rfcomm.cpp
SOURCE rfcommmuxer.cpp rfcommsap.cpp
SOURCE rfcommstates.cpp rfcommutil.cpp rfcommflow.cpp
SOURCE rfcommframe.cpp Rfcommfcs.cpp
SOURCE rfcommmuxchannel.cpp
SOURCE AsyncErrorKicker.cpp

#ifndef BLUETOOTH_NO_AV
SOURCEPATH ../avdtp			// Audio Video Distribution Transport Protocol
	
SOURCE avdtp.cpp
SOURCE avdtpAllocators.cpp
SOURCE avdtpMessage.cpp
SOURCE avdtpsap.cpp
SOURCE avdtpConfigurators.cpp
SOURCE avdtpDirectChannel.cpp
SOURCE avdtpLogicalChannelFactory.cpp
SOURCE avdtpMediaSession.cpp
SOURCE avdtpReportingSession.cpp
SOURCE avdtpRecoverySession.cpp
SOURCE avdtpMuxChannel.cpp
SOURCE avdtpSignallingChannel.cpp
SOURCE avdtpSignallingTransaction.cpp
SOURCE avdtpSignallingSession.cpp
SOURCE avdtpSignallingMessages.cpp
SOURCE avdtpTransportChannel.cpp
SOURCE avdtpTransportSession.cpp
SOURCE avdtpSEPCache.cpp
SOURCE avdtputil.cpp
SOURCE avdtpLocalSEP.cpp
SOURCE avdtpStream.cpp
SOURCE avdtpStreamStates.cpp

SOURCEPATH ../avctp				// Audio Visual Control Transport Protocol

SOURCE avctpmuxer.cpp
SOURCE avctpmuxerstates.cpp
SOURCE avctpsap.cpp
SOURCE avctp.cpp
SOURCE avctppacket.cpp
SOURCE avctputils.cpp
SOURCE avctpOutboundQ.cpp
SOURCE avctpPacketMgr.cpp
		
LIBRARY bluetoothav.lib

#else // !BLUETOOTH_NO_AV

SOURCEPATH ../avctp				// Audio Visual Control Transport Protocol

#endif // BLUETOOTH_NO_AV

SOURCEPATH ../sdp			// The SDP Protocol

SOURCE sdp.cpp sdpclient.cpp
SOURCE sdpnetdb.cpp sdppdu.cpp
SOURCE sdpstackutil.cpp

USERINCLUDE		.		// bluetooth/stack/common
USERINCLUDE		../linkmgr
USERINCLUDE		../secman
USERINCLUDE		../eirman
USERINCLUDE		../l2cap
USERINCLUDE		../rfcomm
USERINCLUDE		../sdp

// required in NO_AV for btprt.cpp
USERINCLUDE		../avctp ../avdtp
USERINCLUDE		../avdtp/gavdpinterface
USERINCLUDE		../avctp/common

USERINCLUDE ../inc // bluetooth/stack/inc
OS_LAYER_SYSTEMINCLUDE_SYMBIAN
USERINCLUDE ../../../bluetoothmgmt/btcommon/inc // bluetooth/inc
OS_LAYER_ESTLIB_SYSTEMINCLUDE

LIBRARY euser.lib
LIBRARY esock.lib
LIBRARY esocksvr.lib
LIBRARY mbufmgr.lib
LIBRARY btmanclient.lib
LIBRARY btdevice.lib
LIBRARY bluetooth.lib
LIBRARY charconv.lib
LIBRARY hcicmdq.lib
LIBRARY estlib.lib
LIBRARY commandsevents.lib
LIBRARY corehci_base.lib
LIBRARY hciserverclient.lib
LIBRARY hciutil.lib
LIBRARY btextnotifiers.lib 
LIBRARY hcishared.lib

LIBRARY		eirclient.lib

#include <bluetooth/btlogger.mmh>
#include <comms-infras/commsdebugutility.mmh>
#include <cflog.mmh>

/*  Compile-time macros */
MACRO CONNECTION_PREEMPTS_INQUIRY
//MACRO KEEP_L2CAP_DEBUG_STATISTICS
MACRO BT_LINKMGR_V2
MACRO HOSTCONTROLLER_TO_HOST_FLOW_CONTROL

OPTION		cw -strict on -w pedantic,unused,hidevirtual,padding,ptrintconv

UNPAGED

SMPSAFE
