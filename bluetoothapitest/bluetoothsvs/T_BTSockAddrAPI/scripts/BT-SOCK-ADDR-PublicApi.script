//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//


RUN_UTILS	MkDir	${SYSDRIVE}\bluetooth\
RUN_UTILS	MkDir	${SYSDRIVE}\bluetooth\tbtsockaddrapi\

LOAD_SUITE	T_BTSockAddrAPI
DELAY		2000


//! @file
//! @SYMTestSuiteName		BT-SOCK-ADDR-PublicApi
//! @SYMScriptTestEnvironment	This test script requires a basic ROM.


// ****************************************************************************
// TBTServiceSecurity
// **************************************************************************** 

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0001
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0001
//! @SYMAPI			TBTServiceSecurity
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		27/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Create a TBTServiceSecurity object with default values
//!				Uses API elements: TBTServiceSecurity()
//! @SYMTestActions    		1. Create an empty TBTServiceSecurity object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Object created
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity1	
			COMMAND		TBTServiceSecurity1	Construct
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0001

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0002
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0002
//! @SYMAPI			TBTServiceSecurity
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		27/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Create a TBTServiceSecurity object given a TBTServiceSecurity object
//!				Uses API elements: TBTServiceSecurity(TBTServiceSecurity)
//! @SYMTestActions    		1. Create a TBTServiceSecurity object
//!				2. Create a new TBTServiceSecurity object using the TBTServiceSecurity (from 1) as argument
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Object created
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity1	
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity2	
			COMMAND		TBTServiceSecurity1	Construct
			COMMAND		TBTServiceSecurity2	Construct		BT-SOCK-ADDR-PublicApi-0002-001command3Construct
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0002

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0003
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0003
//! @SYMAPI			TBTServiceSecurity
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		27/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the Authentication of the TBTServiceSecurity and Retrieve it
//!				Uses API elements: TBTServiceSecurity(), SetAuthentication, AuthenticationRequired
//! @SYMTestActions    		1. Create an empty TBTServiceSecurity object
//!		    		2. Set the TBTServiceSecurity Authentication to true
//!				3. Retrieve the Authentication value from the TBTServiceSecurity
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity1	
			COMMAND		TBTServiceSecurity1	Construct
			COMMAND		TBTServiceSecurity1	SetAuthentication		BT-SOCK-ADDR-PublicApi-0003-001command2SetAuthentication
			COMMAND		TBTServiceSecurity1	AuthenticationRequired		BT-SOCK-ADDR-PublicApi-0003-001command3AuthenticationRequired
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0003

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0004
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0004
//! @SYMAPI			TBTServiceSecurity
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		27/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the Authorisation of the TBTServiceSecurity and Retrieve it
//!				Uses API elements: TBTServiceSecurity(), SetAuthorisation, AuthorisationRequired
//! @SYMTestActions    		1. Create an empty TBTServiceSecurity object
//!		    		2. Set a TBTServiceSecurity Authorisation to true
//!				3. Retrieve the Authorisation value from the TBTServiceSecurity
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity1	
			COMMAND		TBTServiceSecurity1	Construct
			COMMAND		TBTServiceSecurity1	SetAuthorisation		BT-SOCK-ADDR-PublicApi-0004-001command2SetAuthorisation
			COMMAND		TBTServiceSecurity1	AuthorisationRequired		BT-SOCK-ADDR-PublicApi-0004-001command3AuthorisationRequired
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0004

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0005
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0005
//! @SYMAPI			TBTServiceSecurity
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		27/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the Authorisation of the TBTServiceSecurity and Retrieve it
//!				Uses API elements: TBTServiceSecurity(), SetAuthorisation, AuthorisationRequired
//! @SYMTestActions    		1. Create a new empty TBTServiceSecurity object
//!				2. Set a TBTServiceSecurity Authorisation to false
//!				3. Retrieve the Authorisation value from the TBTServiceSecurity
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity1	
			COMMAND		TBTServiceSecurity1	Construct
			COMMAND		TBTServiceSecurity1	SetAuthorisation		BT-SOCK-ADDR-PublicApi-0005-001command2SetAuthorisation
			COMMAND		TBTServiceSecurity1	AuthorisationRequired		BT-SOCK-ADDR-PublicApi-0005-001command3AuthorisationRequired
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0005

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0006
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0006
//! @SYMAPI			TBTServiceSecurity
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		27/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set and get Authorisation and Authentication of the TBTServiceSecurity
//!				Uses API elements: TBTServiceSecurity(), SetAuthentication, SetAuthorisation,
//!				AuthorisationRequired, AuthenticationRequired
//! @SYMTestActions    		1. Create a new empty TBTServiceSecurity object
//!				2. Set a TBTServiceSecurity Authentication to true
//!				3. Set a TBTServiceSecurity Authorisation to false
//!				4. Retrieve the Authorisation value from the TBTServiceSecurity
//!				   and compare with original
//!				5. Retrieve the Authentication value from the TBTServiceSecurity
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity1	
			COMMAND		TBTServiceSecurity1	Construct
			COMMAND		TBTServiceSecurity1	SetAuthentication		BT-SOCK-ADDR-PublicApi-0006-001command2SetAuthentication
			COMMAND		TBTServiceSecurity1	SetAuthorisation		BT-SOCK-ADDR-PublicApi-0006-001command3SetAuthorisation
			COMMAND		TBTServiceSecurity1	AuthorisationRequired		BT-SOCK-ADDR-PublicApi-0006-001command4AuthorisationRequired
			COMMAND		TBTServiceSecurity1	AuthenticationRequired		BT-SOCK-ADDR-PublicApi-0006-001command5AuthenticationRequired
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0006

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0007
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0007
//! @SYMAPI			TBTServiceSecurity
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		27/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the Denied property of the TBTServiceSecurity and Retrieve it
//!				Uses API elements: TBTServiceSecurity(), SetDenied, Denied
//! @SYMTestActions    		1. Create an empty TBTServiceSecurity object
//!		    		2. Set a TBTServiceSecurity Denied to true
//!				3. Retrieve the Denied value from the TBTServiceSecurity
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity1	
			COMMAND		TBTServiceSecurity1	Construct
			COMMAND		TBTServiceSecurity1	SetDenied		BT-SOCK-ADDR-PublicApi-0007-001command2SetDenied
			COMMAND		TBTServiceSecurity1	Denied		BT-SOCK-ADDR-PublicApi-0007-001command3Denied
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0007

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0008
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0008
//! @SYMAPI			TBTServiceSecurity
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		27/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the Encryption of the TBTServiceSecurity and Retrieve it
//!				Uses API elements: TBTServiceSecurity(), SetEncryption, EncryptionRequired
//! @SYMTestActions    		1. Create an empty TBTServiceSecurity object
//!		   		2. Set a TBTServiceSecurity Encryption to true
//!				3. Retrieve the Encryption value from the TBTServiceSecurity
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity1	
			COMMAND		TBTServiceSecurity1	Construct
			COMMAND		TBTServiceSecurity1	SetEncryption		BT-SOCK-ADDR-PublicApi-0008-001command2SetEncryption
			COMMAND		TBTServiceSecurity1	EncryptionRequired		BT-SOCK-ADDR-PublicApi-0008-001command3EncryptionRequired
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0008

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0009
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0009
//! @SYMAPI			TBTServiceSecurity
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		27/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the PasskeyMinLength of the TBTServiceSecurity and Retrieve it
//!				Uses API elements: TBTServiceSecurity(), SetPasskeyMinLength, PasskeyMinLength
//! @SYMTestActions    		1. Create an empty TBTServiceSecurity object
//! @SYMTestActions    		2. Set a TBTServiceSecurity PasskeyMinLength to a value
//!				3. Retrieve the PasskeyMinLength value from the TBTServiceSecurity
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity1	
			COMMAND		TBTServiceSecurity1	Construct
			COMMAND		TBTServiceSecurity1	SetPasskeyMinLength		BT-SOCK-ADDR-PublicApi-0009-001command2SetPasskeyMinLength
			COMMAND		TBTServiceSecurity1	PasskeyMinLength		BT-SOCK-ADDR-PublicApi-0009-001command3PasskeyMinLength
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0009

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0010
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0010
//! @SYMAPI			TBTServiceSecurity
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		27/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the Uid of the TBTServiceSecurity and Retrieve it
//!				Uses API elements: TBTServiceSecurity(), SetUid, Uid
//! @SYMTestActions    		1. Create an empty TBTServiceSecurity object
//!		    		2. Set a TBTServiceSecurity Uid to a value
//!				3. Retrieve the Uid value from the TBTServiceSecurity
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity1	
			COMMAND		TBTServiceSecurity1	Construct
			COMMAND		TBTServiceSecurity1	SetUid		BT-SOCK-ADDR-PublicApi-0010-001command2SetUid
			COMMAND		TBTServiceSecurity1	Uid		BT-SOCK-ADDR-PublicApi-0010-001command3Uid
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0010

// ****************************************************************************
// TBTServiceSecurity (Deep testing and error conditions)
// **************************************************************************** 


START_TESTCASE			BT-SOCK-ADDR-PublicApi-0011
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0011
//! @SYMAPI			TBTServiceSecurity
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		08/02/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Create a TBTServiceSecurity object with default values
//!				Uses API elements: TBTServiceSecurity(), AuthorisationRequired, AuthenticationRequired,
//!				Denied, EncryptionRequired, PasskeyMinLength, Uid, SetAuthentication, SetAuthorisation,
//!				SetDenied, SetEncryption, SetPasskeyMinLength, SetUid, TBTServiceSecurity(TBTServiceSecurity)
//! @SYMTestActions    		1. Create an empty TBTServiceSecurity object
//!				2. Verify each of the default values
//!				3. SetAuthentication to true 
//!				4. SetAuthorisation to true 
//!				5. SetDenied to true 
//!				6. SetEncryption to true 
//!				7. SetPasskeyMinLength to a suitable value
//!				8. SetUid to a suitable value
//!				9. Create a new TBTServiceSecurity object using the current TBTServiceSecurity as argument
//!				10. Verify each of the set values in the new default object
//!				11. SetAuthentication to false
//!				12. SetAuthorisation to false
//!				13. SetDenied to false
//!				14. SetEncryption to false
//!				15. SetPasskeyMinLength to a suitable low value 0?
//!				16. SetUid to a suitable low value 0?
//!				17. Verify each of the set values
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Values for each attribute set as expected
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity1	
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity2	
			COMMAND		TBTServiceSecurity1	Construct
			COMMAND		TBTServiceSecurity1	AuthorisationRequired		BT-SOCK-ADDR-PublicApi-0011-001command2AuthorisationRequired
			COMMAND		TBTServiceSecurity1	AuthenticationRequired		BT-SOCK-ADDR-PublicApi-0011-001command3AuthenticationRequired
			COMMAND		TBTServiceSecurity1	Denied		BT-SOCK-ADDR-PublicApi-0011-001command4Denied
			COMMAND		TBTServiceSecurity1	EncryptionRequired		BT-SOCK-ADDR-PublicApi-0011-001command5EncryptionRequired
			COMMAND		TBTServiceSecurity1	PasskeyMinLength		BT-SOCK-ADDR-PublicApi-0011-001command6PasskeyMinLength
			COMMAND		TBTServiceSecurity1	Uid		BT-SOCK-ADDR-PublicApi-0011-001command7Uid
			COMMAND		TBTServiceSecurity1	SetAuthentication		BT-SOCK-ADDR-PublicApi-0011-001command8SetAuthentication
			COMMAND		TBTServiceSecurity1	SetAuthorisation		BT-SOCK-ADDR-PublicApi-0011-001command9SetAuthorisation
			COMMAND		TBTServiceSecurity1	SetDenied		BT-SOCK-ADDR-PublicApi-0011-001command10SetDenied
			COMMAND		TBTServiceSecurity1	SetEncryption		BT-SOCK-ADDR-PublicApi-0011-001command11SetEncryption
			COMMAND		TBTServiceSecurity1	SetPasskeyMinLength		BT-SOCK-ADDR-PublicApi-0011-001command12SetPasskeyMinLength
			COMMAND		TBTServiceSecurity1	SetUid		BT-SOCK-ADDR-PublicApi-0011-001command13SetUid
			COMMAND		TBTServiceSecurity2	Construct		BT-SOCK-ADDR-PublicApi-0011-001command15Construct
			COMMAND		TBTServiceSecurity2	AuthorisationRequired		BT-SOCK-ADDR-PublicApi-0011-001command16AuthorisationRequired
			COMMAND		TBTServiceSecurity2	AuthenticationRequired		BT-SOCK-ADDR-PublicApi-0011-001command17AuthenticationRequired
			COMMAND		TBTServiceSecurity2	Denied		BT-SOCK-ADDR-PublicApi-0011-001command18Denied
			COMMAND		TBTServiceSecurity2	EncryptionRequired		BT-SOCK-ADDR-PublicApi-0011-001command19EncryptionRequired
			COMMAND		TBTServiceSecurity2	PasskeyMinLength		BT-SOCK-ADDR-PublicApi-0011-001command20PasskeyMinLength
			COMMAND		TBTServiceSecurity2	Uid		BT-SOCK-ADDR-PublicApi-0011-001command21Uid
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0011


// ****************************************************************************
// TRfcommSockAddr
// ****************************************************************************

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0012
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0012
//! @SYMAPI			TRfcommSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Create a TRfcommSockAddr object with default values
//!				Uses API elements: TRfcommSockAddr()
//! @SYMTestActions    		1. Create an empty TRfcommSockAddr object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Object created
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr1	
			COMMAND		TRfcommSockAddr1	Construct
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0012

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0013
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0013
//! @SYMAPI			TRfcommSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Create a TRfcommSockAddr object given a TSockAddr object
//!				Uses API elements: TRfcommSockAddr(TSockAddr)
//! @SYMTestActions    		1. Create a TSockAddr object
//!				2. Create the TRfcommSockAddr object using the TSockAddr object as argument
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Object created
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TSockAddr	TSockAddr1	
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr1	
			COMMAND		TSockAddr1	Construct
			COMMAND		TRfcommSockAddr1	Construct		BT-SOCK-ADDR-PublicApi-0013-001command3Construct
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0013

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0014
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0014
//! @SYMAPI			TRfcommSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Create a TRfcommSockAddr object from a TSockAddr object
//!				Uses API elements: Cast(TSockAddr)
//! @SYMTestActions    		1. Create a TSockAddr object
//!				2. Cast the TSockAddr object to a TRfcommSockAddr object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	TRfcommSockAddr object created by cast
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TSockAddr	TSockAddr1	
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr1	
			COMMAND		TSockAddr1	Construct
			COMMAND		TRfcommSockAddr1	CastFromTSockAddr		BT-SOCK-ADDR-PublicApi-0014-001command3CastFromTSockAddr
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0014

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0015
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0015
//! @SYMAPI			TRfcommSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		23/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the Bluetooth address to a value, Retrieve it and compare
//!				Uses API elements: TRfcommSockAddr(), SetBTAddr, BTAddr
//! @SYMTestActions    		1. Create an empty TRfcommSockAddr object
//!		    		2. Create a TBTDevAddr with a specified value
//!				3. Set an RfcommSockAddr objects Bluetooth address to TBTDevAddr
//!				4. Retrieve the TBTDevAddr from the RfcommSockAddr
//!				   and compare with original TBTDevAddr
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr1	
			COMMAND		TRfcommSockAddr1	Construct
			COMMAND		TRfcommSockAddr1	SetBTAddr		BT-SOCK-ADDR-PublicApi-0015-001command2SetBTAddr
			COMMAND		TRfcommSockAddr1	BTAddr		BT-SOCK-ADDR-PublicApi-0015-001command3BTAddr
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0015

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0016
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0016
//! @SYMAPI			TRfcommSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the Security settings of an RfcommSockAddr object, Retrieve them and compare
//!				Uses API elements: TRfcommSockAddr(), SetSecurity, BTSecurity
//! @SYMTestActions    		1. Create an empty TRfcommSockAddr object
//!		    		2. Create a TBTServiceSecurity object
//!				3. Set a RfcommSockAddr Security settings to TBTServiceSecurity
//!				4. Retrieve the TBTServiceSecurity from RfcommSockAddr
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr1	
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity1	
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity2	
			COMMAND		TRfcommSockAddr1	Construct
			COMMAND		TBTServiceSecurity1	Construct
			COMMAND		TBTServiceSecurity1	SetAuthentication		BT-SOCK-ADDR-PublicApi-0016-001command4SetAuthentication
			COMMAND		TBTServiceSecurity1	SetAuthorisation		BT-SOCK-ADDR-PublicApi-0016-001command5SetAuthorisation
			COMMAND		TBTServiceSecurity1	SetDenied		BT-SOCK-ADDR-PublicApi-0016-001command6SetDenied
			COMMAND		TBTServiceSecurity1	SetEncryption		BT-SOCK-ADDR-PublicApi-0016-001command7SetEncryption
			COMMAND		TBTServiceSecurity1	SetPasskeyMinLength		BT-SOCK-ADDR-PublicApi-0016-001command8SetPasskeyMinLength
			COMMAND		TBTServiceSecurity1	SetUid		BT-SOCK-ADDR-PublicApi-0016-001command9SetUid
			COMMAND		TRfcommSockAddr1	SetSecurity		BT-SOCK-ADDR-PublicApi-0016-001command11SetSecurity
			COMMAND		TRfcommSockAddr1	BTSecurity		BT-SOCK-ADDR-PublicApi-0016-001command12BTSecurity
			COMMAND		TBTServiceSecurity2	AuthorisationRequired		BT-SOCK-ADDR-PublicApi-0016-001command14AuthorisationRequired
			COMMAND		TBTServiceSecurity2	AuthenticationRequired		BT-SOCK-ADDR-PublicApi-0016-001command15AuthenticationRequired
			COMMAND		TBTServiceSecurity2	Denied		BT-SOCK-ADDR-PublicApi-0016-001command16Denied
			COMMAND		TBTServiceSecurity2	EncryptionRequired		BT-SOCK-ADDR-PublicApi-0016-001command17EncryptionRequired
			COMMAND		TBTServiceSecurity2	PasskeyMinLength		BT-SOCK-ADDR-PublicApi-0016-001command18PasskeyMinLength
			COMMAND		TBTServiceSecurity2	Uid		BT-SOCK-ADDR-PublicApi-0016-001command19Uid
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0016

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0017
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0017
//! @SYMAPI			TRfcommSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the Family of the BT device and Retrieve it
//!				Uses API elements: TRfcommSockAddr(), SetFamily, Family
//! @SYMTestActions    		1. Create an empty TRfcommSockAddr object
//!		    		2. Set the RfcommSockAddr Family to a suitable value
//!				3. Retrieve the Family value from the RfcommSockAddr
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr1	
			COMMAND		TRfcommSockAddr1	Construct
			COMMAND		TRfcommSockAddr1	SetFamily		BT-SOCK-ADDR-PublicApi-0017-001command2SetFamily
			COMMAND		TRfcommSockAddr1	Family		BT-SOCK-ADDR-PublicApi-0017-001command3Family
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0017

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0018
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0018
//! @SYMAPI			TRfcommSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the port of the BT device and Retrieve it
//!				Uses API elements: TRfcommSockAddr(), SetPort, Port
//! @SYMTestActions    		1. Create an empty TRfcommSockAddr object
//!		    		2. Set a RfcommSockAddr port to a suitable value
//!				3. Retrieve the port value from the RfcommSockAddr
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr1	
			COMMAND		TRfcommSockAddr1	Construct
			COMMAND		TRfcommSockAddr1	SetPort		BT-SOCK-ADDR-PublicApi-0018-001command2SetPort
			COMMAND		TRfcommSockAddr1	Port		BT-SOCK-ADDR-PublicApi-0018-001command3Port
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0018

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0019
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0019
//! @SYMAPI			TRfcommSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Create two RfcommSockAddr objects set the ports to the same value and compare them
//!				Uses API elements: TRfcommSockAddr(), SetPort, CmpPort
//! @SYMTestActions    		1. Create two RfcommSockAddr objects
//!				2. Set each port to a suitable value (same value)
//!				3. Call CmpPort on one of the objects given the other as argument
//!				   Etrue is returned verifying that the port number is the same	
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The port addresses of the two created objects are equal
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr1	
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr2	
			COMMAND		TRfcommSockAddr1	Construct
			COMMAND		TRfcommSockAddr1	SetPort		BT-SOCK-ADDR-PublicApi-0019-001command2SetPort
			COMMAND		TRfcommSockAddr1	Port		BT-SOCK-ADDR-PublicApi-0019-001command3Port
			COMMAND		TRfcommSockAddr2	Construct
			COMMAND		TRfcommSockAddr2	SetPort		BT-SOCK-ADDR-PublicApi-0019-001command6SetPort
			COMMAND		TRfcommSockAddr2	CmpPort		BT-SOCK-ADDR-PublicApi-0019-001command7CmpPort
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0019



// ****************************************************************************
// T_TRfcommSockAddrChild (Inherited to test protected members of TRfcommSockAddr)
// ****************************************************************************

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0020
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0020
//! @SYMAPI			TRfcommSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the User length of the BT device and Retrieve it
//!				Uses API elements: SetUserLen, GetUserLen
//! @SYMTestActions    		1. Create an empty T_TRfcommSockAddrChild object
//!		    		2. Set a T_TRfcommSockAddrChild UserLen to a suitable value
//!				3. Retrieve the UserLen value from the T_TRfcommSockAddrChild 
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr1	
			COMMAND		TRfcommSockAddr1	Construct
			COMMAND		TRfcommSockAddr1	PROTECTED-SetUserLen		BT-SOCK-ADDR-PublicApi-0020-001command2PROTECTED-SetUserLen
			COMMAND		TRfcommSockAddr1	GetUserLen		BT-SOCK-ADDR-PublicApi-0020-001command3GetUserLen
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0020

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0021
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0021
//! @SYMAPI			TRfcommSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Get the User pointer
//!				Uses API elements: UserPtr
//! @SYMTestActions    		1. Create an empty T_TRfcommSockAddrChild object
//!		    		2. Get the pointer to the user data and Verify that a 
//!				   Null pointer is not Retrieved
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Null pointer is not Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr1	
			COMMAND		TRfcommSockAddr1	Construct
			COMMAND		TRfcommSockAddr1	PROTECTED-UserPtr
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0021



// ****************************************************************************
// TBTSockAddr
// ****************************************************************************

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0022
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0022
//! @SYMAPI			TBTSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Create a TBTSockAddr with default values
//!				Uses API elements: TBTSockAddr()
//! @SYMTestActions    		1. Create an empty TBTSockAddr object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Object created
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
			COMMAND		TBTSockAddr1	Construct
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0022

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0023
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0023
//! @SYMAPI			TBTSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Create a TBTSockAddr object given a TSockAddr object
//!				Uses API elements: TBTSockAddr(TSockAddr)
//! @SYMTestActions    		1. Create a TBTSockAddr object
//!				2. Create the TBTSockAddr using the TSockAddr as argument
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Object created
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TSockAddr	TSockAddr1	
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
			COMMAND		TSockAddr1	Construct
			COMMAND		TBTSockAddr1	Construct		BT-SOCK-ADDR-PublicApi-0023-001command3Construct
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0023

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0024
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0024
//! @SYMAPI			TBTSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Create a TBTSockAddr object from a TSockAddr object
//!				Uses API elements: Cast(TSockAddr)
//! @SYMTestActions    		1. Create a TSockAddr object
//!				2. Cast the TSockAddr object to a TBTSockAddr object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	TRfcommSockAddr object created by cast
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TSockAddr	TSockAddr1	
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
			COMMAND		TSockAddr1	Construct
			COMMAND		TBTSockAddr1	CastFromTSockAddr		BT-SOCK-ADDR-PublicApi-0024-001command3CastFromTSockAddr
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0024

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0025
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0025
//! @SYMAPI			TBTSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		23/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the Bluetooth address to a value, Retrieve it and compare
//!				Uses API elements: TBTSockAddr(), SetBTAddr, BTAddr
//! @SYMTestActions    		1. Create an empty TBTSockAddr object
//!		    		2. Create a TBTDevAddr object with a specified value
//!				3. Set a TBTSockAddr objects Bluetooth address to the TBTDevAddr object
//!				4. Retrieve the TBTDevAddr from the TBTSockAddr and
//!				   compare with original TBTDevAddr
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
			COMMAND		TBTSockAddr1	Construct
			COMMAND		TBTSockAddr1	SetBTAddr		BT-SOCK-ADDR-PublicApi-0025-001command2SetBTAddr
			COMMAND		TBTSockAddr1	BTAddr		BT-SOCK-ADDR-PublicApi-0025-001command3BTAddr
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0025

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0026
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0026
//! @SYMAPI			TBTSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the Security settings, Retrieve them and compare
//!				Uses API elements: TBTSockAddr(), SetSecurity, BTSecurity
//! @SYMTestActions    		1. Create an empty TBTSockAddr object
//!		   		2. Create a TBTServiceSecurity object
//!				3. Set the TBTSockAddr objects Security settings to the TBTServiceSecurity object
//!				4. Retrieve the TBTServiceSecurity object from the TBTSockAddr object
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity1	
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity2	
			COMMAND		TBTSockAddr1	Construct
			COMMAND		TBTServiceSecurity2	Construct
			COMMAND		TBTServiceSecurity1	Construct
			COMMAND		TBTServiceSecurity1	SetAuthentication		BT-SOCK-ADDR-PublicApi-0026-001command6SetAuthentication
			COMMAND		TBTServiceSecurity1	SetAuthorisation		BT-SOCK-ADDR-PublicApi-0026-001command7SetAuthorisation
			COMMAND		TBTServiceSecurity1	SetDenied		BT-SOCK-ADDR-PublicApi-0026-001command8SetDenied
			COMMAND		TBTServiceSecurity1	SetEncryption		BT-SOCK-ADDR-PublicApi-0026-001command9SetEncryption
			COMMAND		TBTServiceSecurity1	SetPasskeyMinLength		BT-SOCK-ADDR-PublicApi-0026-001command10SetPasskeyMinLength
			COMMAND		TBTServiceSecurity1	SetUid		BT-SOCK-ADDR-PublicApi-0026-001command11SetUid
			COMMAND		TBTSockAddr1	SetSecurity		BT-SOCK-ADDR-PublicApi-0026-001command13SetSecurity
			COMMAND		TBTSockAddr1	BTSecurity		BT-SOCK-ADDR-PublicApi-0026-001command14BTSecurity
			COMMAND		TBTServiceSecurity2	AuthorisationRequired		BT-SOCK-ADDR-PublicApi-0026-001command16AuthorisationRequired
			COMMAND		TBTServiceSecurity2	AuthenticationRequired		BT-SOCK-ADDR-PublicApi-0026-001command17AuthenticationRequired
			COMMAND		TBTServiceSecurity2	Denied		BT-SOCK-ADDR-PublicApi-0026-001command18Denied
			COMMAND		TBTServiceSecurity2	EncryptionRequired		BT-SOCK-ADDR-PublicApi-0026-001command19EncryptionRequired
			COMMAND		TBTServiceSecurity2	PasskeyMinLength		BT-SOCK-ADDR-PublicApi-0026-001command20PasskeyMinLength
			COMMAND		TBTServiceSecurity2	Uid		BT-SOCK-ADDR-PublicApi-0026-001command21Uid
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0026

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0027
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0027
//! @SYMAPI			TBTSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the Family of the BT device and Retrieve it
//!				Uses API elements: TBTSockAddr(), SetFamily, Family
//! @SYMTestActions    		1. Create an empty TBTSockAddr object
//!		    		2. Set the TBTSockAddr objects Family to a suitable value
//!				3. Retrieve the Family value from the TBTSockAddr object
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
			COMMAND		TBTSockAddr1	Construct
			COMMAND		TBTSockAddr1	SetFamily		BT-SOCK-ADDR-PublicApi-0027-001command2SetFamily
			COMMAND		TBTSockAddr1	Family		BT-SOCK-ADDR-PublicApi-0027-001command3Family
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0027

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0028
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0028
//! @SYMAPI			TBTSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the port of the BT device and Retrieve it
//!				Uses API elements: ::TBTSockAddr(), SetPort, Port
//! @SYMTestActions    		1. Create an empty TBTSockAddr object
//!		    		2. Set the TBTSockAddr objects port to a suitable value
//!				3. Retrieve the port value from the TBTSockAddr object
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
			COMMAND		TBTSockAddr1	Construct
			COMMAND		TBTSockAddr1	SetPort		BT-SOCK-ADDR-PublicApi-0028-001command2SetPort
			COMMAND		TBTSockAddr1	Port		BT-SOCK-ADDR-PublicApi-0028-001command3Port
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0028

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0029
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0029
//! @SYMAPI			TBTSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Create two TBTSockAddr objects set the ports to the same value and compare them
//!				Uses API elements: TBTSockAddr(), SetPort, CmpPort
//! @SYMTestActions    		1. Create two TBTSockAddr objects
//!				2. Set each objects port to a suitable value (same value)
//!				3. Call CmpPort on one of the objects given the other as argument
//!				   Etrue is returned verifying that the port number is the same	
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The port addresses of the two created objects are equal
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr2	
			COMMAND		TBTSockAddr1	Construct
			COMMAND		TBTSockAddr1	SetPort		BT-SOCK-ADDR-PublicApi-0029-001command2SetPort
			COMMAND		TBTSockAddr2	Construct
			COMMAND		TBTSockAddr2	SetPort		BT-SOCK-ADDR-PublicApi-0029-001command5SetPort
			COMMAND		TBTSockAddr2	CmpPort		BT-SOCK-ADDR-PublicApi-0029-001command6CmpPort
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0029



// ****************************************************************************
// TBTSockAddr (Deep testing and error conditions)
// ****************************************************************************



START_TESTCASE			BT-SOCK-ADDR-PublicApi-0030
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0030
//! @SYMAPI			TBTSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Create two TBTSockAddr objects set the ports to different values and compare
//!				Uses API elements: TBTSockAddr(), SetPort, CmpPort
//! @SYMTestActions    		1. Create two TBTSockAddr objects
//!				2. Set each objects port to a suitable value (different values)
//!				3. Call CmpPort on one of the objects given the other as argument
//!				   Efalse is returned verifying that the port number is not the same	
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	The port addresses of the two created objects are not equal
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr2	
			COMMAND		TBTSockAddr1	Construct
			COMMAND		TBTSockAddr1	SetPort		BT-SOCK-ADDR-PublicApi-0030-001command2SetPort
			COMMAND		TBTSockAddr2	Construct
			COMMAND		TBTSockAddr2	SetPort		BT-SOCK-ADDR-PublicApi-0030-001command5SetPort
			COMMAND		TBTSockAddr2	CmpPort		BT-SOCK-ADDR-PublicApi-0030-001command6CmpPort
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0030



// ****************************************************************************
// T_TBTSockAddrChild (Inherited to test protected members of TBTSockAddr) 
// ****************************************************************************

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0031
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0031
//! @SYMAPI			TBTSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the User length of the BT device and Retrieve  it
//!				Uses API elements: SetUserLen, GetUserLen
//! @SYMTestActions    		1. Create an empty T_TBTSockAddrChild object
//!		   		2. Set the T_TBTSockAddrChild UserLen to a suitable value
//!				3. Retrieve  the UserLen value from the T_TBTSockAddrChild object
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
			COMMAND		TBTSockAddr1	Construct
			COMMAND		TBTSockAddr1	PROTECTED-SetUserLen		BT-SOCK-ADDR-PublicApi-0031-001command2PROTECTED-SetUserLen
			COMMAND		TBTSockAddr1	GetUserLen		BT-SOCK-ADDR-PublicApi-0031-001command3GetUserLen
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0031

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0032
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0032
//! @SYMAPI			TBTSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		26/01/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Get the User Pointer
//! @SYMTestActions    		1. Create an empty T_TBTSockAddrChild object
//!				Uses API elements: UserPtr
//!		    		2. Get the pointer to the user data and Verify that a 
//!				   Null pointer is not Retrieved
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Non Null pointer Retrieved
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
			COMMAND		TBTSockAddr1	Construct
			COMMAND		TBTSockAddr1	PROTECTED-UserPtr
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0032


START_TESTCASE			BT-SOCK-ADDR-PublicApi-0033
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0033
//! @SYMAPI			TBTSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		10/02/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Get the EndBTSockAddrPtr and verify that it is not NULL
//!				Uses API elements: EndBTSockAddrPtr
//! @SYMTestActions    		1. Create an empty T_TBTSockAddrChild  object
//!				2. Retrieve  the BTSockAddrPtr value from the T_TBTSockAddrChild  
//!				   and verify that an address is received
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Non NULL pointer received
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
			COMMAND		TBTSockAddr1	Construct
			COMMAND		TBTSockAddr1	PROTECTED-EndBTSockAddrPtr
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0033


// ****************************************************************************
// T_TBTSockAddrChild (Inherited to test protected members of T_TBTSockAddr)
// Deep testing
// ****************************************************************************


//!START_TESTCASE			BT-SOCK-ADDR-PublicApi-0034
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0034
//! @SYMAPI			TBTSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		10/02/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the User length to a negative value to generate a panic
//!				Uses API elements: SetUserLen
//! @SYMTestActions    		1. Create an empty T_TBTSockAddrChild object
//!		    		2. Set a T_TBTSockAddrChild  UserLen to -KMaxSockAddrSize (32)
//!				3. Retrieve  the UserLen value from the T_TBTSockAddrChild  
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Panic at step 2
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
//!			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
//!			COMMAND		TBTSockAddr1	Construct
//!			COMMAND		TBTSockAddr1	PROTECTED-SetUserLen		BT-SOCK-ADDR-PublicApi-0034-001command2PROTECTED-SetUserLen
//!			COMMAND		TBTSockAddr1	GetUserLen		BT-SOCK-ADDR-PublicApi-0034-001command3GetUserLen
//!	END_TEST_BLOCK	!PanicCode=23	!PanicString=USER
//!END_TESTCASE			BT-SOCK-ADDR-PublicApi-0034

//!START_TESTCASE			BT-SOCK-ADDR-PublicApi-0035
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0035
//! @SYMAPI			TBTSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		10/02/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Set the User length to KMaxSockAddrSize + 1 to generate a panic
//!				Uses API elements: SetUserLen
//! @SYMTestActions    		1. Create an empty T_TBTSockAddrChild object
//!		    		2. Set a T_TBTSockAddrChild  UserLen to KMaxSockAddrSize + 1 (33)
//!				3. Retrieve  the UserLen value from the T_TBTSockAddrChild  
//!				   and compare with original
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Panic at step 2
//! @SYMTestType		CIT
//!	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
//!			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
//!			COMMAND		TBTSockAddr1	Construct
//!			COMMAND		TBTSockAddr1	PROTECTED-SetUserLen		BT-SOCK-ADDR-PublicApi-0035-001command2PROTECTED-SetUserLen
//!			COMMAND		TBTSockAddr1	GetUserLen		BT-SOCK-ADDR-PublicApi-0035-001command3GetUserLen
//!	END_TEST_BLOCK	!PanicCode=23	!PanicString=USER
//!END_TESTCASE			BT-SOCK-ADDR-PublicApi-0035



START_TESTCASE			BT-SOCK-ADDR-PublicApi-0036
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0036
//! @SYMAPI			TBTServiceSecurity, TRfcommSockAddr, TBTSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		10/03/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Scenario using most of all public methods of the classes
//!				Uses API elements: TBTServiceSecurity::
//!					TBTServiceSecurity(), AuthorisationRequired, AuthenticationRequired, Denied,
//!					EncryptionRequired, PasskeyMinLength, Uid, SetAuthentication, SetAuthorisation,
//!					SetDenied, SetEncryption, SetPasskeyMinLength, SetUid, TBTServiceSecurity(TBTServiceSecurity)
//!				TRfcommSockAddr::
//!					TRfcommSockAddr(), SetSecurity, SetBTAddr, SetFamily, SetPort, Port, CmpPort, BTAddr,
//!					Family, BTSecurity
//!				TBTSockAddr
//!					TBTSockAddr(TSockAddr), Family, Port, BTAddr
//! @SYMTestActions    		1. Create an empty TBTServiceSecurity object
//!				2. Verify each of the default values
//!				3. SetAuthentication to true 
//!				4. SetAuthorisation to true 
//!				5. SetDenied  to true 
//!				6. SetEncryption  to true 
//!				7. SetPasskeyMinLength to a suitable value
//!				8. SetUid to a suitable value
//!				9. Create a new TBTServiceSecurity object using the current TBTServiceSecurity as argument
//!		    		10. Create an empty TRfcommSockAddr object
//!				11. Set a RfcommSockAddr Security settings to TBTServiceSecurity
//!		    		12. Set the Bluetooth address of the RfcommSockAddr to a suitable value
//!		    		13. Set the RfcommSockAddr Family to a suitable value
//!		    		14. Set a RfcommSockAddr port to a suitable value
//!		    		15. Verify the port value of the RfcommSockAddr object
//!		    		16. Verify the port and family values of the RfcommSockAddr object using the compare port method
//!		    		17. Verify the BT address of the RfcommSockAddr object
//!		    		18. Verify the family value of the RfcommSockAddr object is 257 (BT)
//!				19. Retrieve the TBTServiceSecurity object from the TRfcommSockAddr object
//!				20. Verify each of the set values in the retrieved TBTServiceSecurity object
//!				21. Create a TBTSockAddr object from the TRfcommSockAddr object
//!				22. Verify the family, port and BT address of the TBTSockAddr object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Values for each attribute set as expected
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity1	
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr1	
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity2	
			CREATE_OBJECT	TBTServiceSecurity	TBTServiceSecurity3	
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr2	
			COMMAND		TBTServiceSecurity1	Construct
			COMMAND		TBTServiceSecurity1	AuthorisationRequired		BT-SOCK-ADDR-PublicApi-0036-001command2AuthorisationRequired
			COMMAND		TBTServiceSecurity1	AuthenticationRequired		BT-SOCK-ADDR-PublicApi-0036-001command3AuthenticationRequired
			COMMAND		TBTServiceSecurity1	Denied		BT-SOCK-ADDR-PublicApi-0036-001command4Denied
			COMMAND		TBTServiceSecurity1	EncryptionRequired		BT-SOCK-ADDR-PublicApi-0036-001command5EncryptionRequired
			COMMAND		TBTServiceSecurity1	PasskeyMinLength		BT-SOCK-ADDR-PublicApi-0036-001command6PasskeyMinLength
			COMMAND		TBTServiceSecurity1	Uid		BT-SOCK-ADDR-PublicApi-0036-001command7Uid
			COMMAND		TBTServiceSecurity1	SetAuthentication		BT-SOCK-ADDR-PublicApi-0036-001command8SetAuthentication
			COMMAND		TBTServiceSecurity1	SetAuthorisation		BT-SOCK-ADDR-PublicApi-0036-001command9SetAuthorisation
			COMMAND		TBTServiceSecurity1	SetDenied		BT-SOCK-ADDR-PublicApi-0036-001command10SetDenied
			COMMAND		TBTServiceSecurity1	SetEncryption		BT-SOCK-ADDR-PublicApi-0036-001command11SetEncryption
			COMMAND		TBTServiceSecurity1	SetPasskeyMinLength		BT-SOCK-ADDR-PublicApi-0036-001command12SetPasskeyMinLength
			COMMAND		TBTServiceSecurity1	SetUid		BT-SOCK-ADDR-PublicApi-0036-001command13SetUid
			COMMAND		TBTServiceSecurity2	Construct		BT-SOCK-ADDR-PublicApi-0036-001command15Construct
			COMMAND		TRfcommSockAddr1	Construct
			COMMAND		TRfcommSockAddr1	SetSecurity		BT-SOCK-ADDR-PublicApi-0036-001command18SetSecurity
			COMMAND		TRfcommSockAddr1	SetBTAddr		BT-SOCK-ADDR-PublicApi-0036-001command19SetBTAddr
			COMMAND		TRfcommSockAddr1	SetFamily		BT-SOCK-ADDR-PublicApi-0036-001command20SetFamily
			COMMAND		TRfcommSockAddr1	SetPort		BT-SOCK-ADDR-PublicApi-0036-001command21SetPort
			COMMAND		TRfcommSockAddr1	Port		BT-SOCK-ADDR-PublicApi-0036-001command22Port
			COMMAND		TRfcommSockAddr1	BTAddr		BT-SOCK-ADDR-PublicApi-0036-001command23BTAddr
			COMMAND		TRfcommSockAddr1	Family		BT-SOCK-ADDR-PublicApi-0036-001command24Family
			COMMAND		TRfcommSockAddr1	BTSecurity		BT-SOCK-ADDR-PublicApi-0036-001command25BTSecurity
			COMMAND		TRfcommSockAddr2	Construct
			COMMAND		TRfcommSockAddr2	SetFamily		BT-SOCK-ADDR-PublicApi-0036-001command28SetFamily
			COMMAND		TRfcommSockAddr2	SetPort		BT-SOCK-ADDR-PublicApi-0036-001command29SetPort
			COMMAND		TRfcommSockAddr2	CmpPort		BT-SOCK-ADDR-PublicApi-0036-001command30CmpPort
			COMMAND		TBTServiceSecurity3	AuthorisationRequired		BT-SOCK-ADDR-PublicApi-0036-001command32AuthorisationRequired
			COMMAND		TBTServiceSecurity3	AuthenticationRequired		BT-SOCK-ADDR-PublicApi-0036-001command33AuthenticationRequired
			COMMAND		TBTServiceSecurity3	Denied		BT-SOCK-ADDR-PublicApi-0036-001command34Denied
			COMMAND		TBTServiceSecurity3	EncryptionRequired		BT-SOCK-ADDR-PublicApi-0036-001command35EncryptionRequired
			COMMAND		TBTServiceSecurity3	PasskeyMinLength		BT-SOCK-ADDR-PublicApi-0036-001command36PasskeyMinLength
			COMMAND		TBTServiceSecurity3	Uid		BT-SOCK-ADDR-PublicApi-0036-001command37Uid
			COMMAND		TBTSockAddr1	Construct		BT-SOCK-ADDR-PublicApi-0036-001command39Construct
			COMMAND		TBTSockAddr1	Family		BT-SOCK-ADDR-PublicApi-0036-001command40Family
			COMMAND		TBTSockAddr1	Port		BT-SOCK-ADDR-PublicApi-0036-001command41Port
			COMMAND		TBTSockAddr1	BTAddr		BT-SOCK-ADDR-PublicApi-0036-001command42BTAddr
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0036


START_TESTCASE			BT-SOCK-ADDR-PublicApi-0037
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0037
//! @SYMAPI			TBTSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		10/03/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Scenario, set the port of the TBTSockAddr and verify it
//!				Uses API elements: TBTSockAddr(), SetPort, CmpPort, SetFamily, Port
//! @SYMTestActions    		1. Create an empty TBTSockAddr object
//!		    		2. Set the port to a suitable value
//!				3. Call compare port (verify with family as default )
//!				4. Set family to a suitable value
//!				5. Call compare port (verify with family as set)
//!				6. get and verify port value
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Same value set and retrieved  
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr2	
			COMMAND		TBTSockAddr1	Construct
			COMMAND		TBTSockAddr1	SetPort		BT-SOCK-ADDR-PublicApi-0037-001command2SetPort
			COMMAND		TBTSockAddr2	Construct
			COMMAND		TBTSockAddr2	SetPort		BT-SOCK-ADDR-PublicApi-0037-001command5SetPort
			COMMAND		TBTSockAddr2	CmpPort		BT-SOCK-ADDR-PublicApi-0037-001command6CmpPort
			COMMAND		TBTSockAddr2	SetFamily		BT-SOCK-ADDR-PublicApi-0037-001command7SetFamily
			COMMAND		TBTSockAddr1	SetFamily		BT-SOCK-ADDR-PublicApi-0037-001command9SetFamily
			COMMAND		TBTSockAddr1	CmpPort		BT-SOCK-ADDR-PublicApi-0037-001command10CmpPort
			COMMAND		TBTSockAddr1	Port		BT-SOCK-ADDR-PublicApi-0037-001command11Port
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0037

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0038
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0038
//! @SYMAPI			TRfcommSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		10/03/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Scenario, set the port of the TRfcommSockAddr and verify it
//!				Uses API elements: TRfcommSockAddr(), SetPort, CmpPort, SetFamily, Port
//! @SYMTestActions    		1. Create an empty TRfcommSockAddr object
//!		    		2. Set the port to a suitable value
//!				3. Call compare port (verify with family as default )
//!				4. Set family to a suitable value
//!				5. Call compare port (verify with family as set)
//!				6. get and verify port value
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Both compares successful
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr1	
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr2	
			COMMAND		TRfcommSockAddr1	Construct
			COMMAND		TRfcommSockAddr1	SetPort		BT-SOCK-ADDR-PublicApi-0038-001command2SetPort
			COMMAND		TRfcommSockAddr2	Construct
			COMMAND		TRfcommSockAddr2	SetPort		BT-SOCK-ADDR-PublicApi-0038-001command5SetPort
			COMMAND		TRfcommSockAddr2	CmpPort		BT-SOCK-ADDR-PublicApi-0038-001command6CmpPort
			COMMAND		TRfcommSockAddr2	SetFamily		BT-SOCK-ADDR-PublicApi-0038-001command7SetFamily
			COMMAND		TRfcommSockAddr1	SetFamily		BT-SOCK-ADDR-PublicApi-0038-001command9SetFamily
			COMMAND		TRfcommSockAddr1	CmpPort		BT-SOCK-ADDR-PublicApi-0038-001command10CmpPort
			COMMAND		TRfcommSockAddr1	Port		BT-SOCK-ADDR-PublicApi-0038-001command11Port
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0038

START_TESTCASE			BT-SOCK-ADDR-PublicApi-0039
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0039
//! @SYMAPI			TRfcommSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		10/03/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Verify same port but different family fails
//!				Uses API elements: TRfcommSockAddr(), SetPort, CmpPort, SetFamily
//! @SYMTestActions    		1. Create an empty TRfcommSockAddr object
//!		    		2. Set the port to a suitable value
//!				3. Call compare port (verify with family as default )
//!				4. Set family to a suitable value
//!				5. Call compare port (verify with family different from set)
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	Compare at step 5 fails
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr1	
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr2	
			COMMAND		TRfcommSockAddr1	Construct
			COMMAND		TRfcommSockAddr1	SetPort		BT-SOCK-ADDR-PublicApi-0039-001command2SetPort
			COMMAND		TRfcommSockAddr2	Construct
			COMMAND		TRfcommSockAddr2	SetPort		BT-SOCK-ADDR-PublicApi-0039-001command5SetPort
			COMMAND		TRfcommSockAddr2	CmpPort		BT-SOCK-ADDR-PublicApi-0039-001command6CmpPort
			COMMAND		TRfcommSockAddr2	SetFamily		BT-SOCK-ADDR-PublicApi-0039-001command7SetFamily
			COMMAND		TRfcommSockAddr1	SetFamily		BT-SOCK-ADDR-PublicApi-0039-001command9SetFamily
			COMMAND		TRfcommSockAddr1	CmpPort		BT-SOCK-ADDR-PublicApi-0039-001command10CmpPort
			COMMAND		TRfcommSockAddr1	Port		BT-SOCK-ADDR-PublicApi-0039-001command11Port
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0039


START_TESTCASE			BT-SOCK-ADDR-PublicApi-0040
//! @SYMTestCaseID		BT-SOCK-ADDR-PublicApi-0040
//! @SYMAPI			TRfcommSockAddr
//! @SYMAuthor			Johan Eriksson
//! @SYMCreationDate		10/03/2006
//! @SYMTestCaseDependencies	setup_t_bluetooth.script
//! @SYMTestCaseDesc		Verify that the TSock defined attributes gets copied by copy constructor
//!				Uses API elements: TBTSockAddr: 
//!					SetPort, SetBTAddr
//!				TRfcommSockAddr:
//!					Family, Port, BTAddr
//! @SYMTestActions    		1. Create an empty TBTSockAddr object
//!		    		2. Set the port to a suitable value
//!				3. Set family to a suitable value (not done as it is set to 257 by copy construct as it is Bluetooth)
//!				4. Set bluetooth address to a suitable value
//!				5. Construct a TRfcommSockAddr object based on the TBTSockAddr object
//!				6. Verify that the family value is 257
//!				7. Verify that the port value is as set
//!				8. Verify that the address value is as set
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults  	All attributes have the same value as set in original object
//! @SYMTestType		CIT
	START_TEST_BLOCK	10	T_BTSockAddrAPI	\bluetooth\BT-SOCK-ADDR-PublicApi.ini
			CREATE_OBJECT	TBTSockAddr	TBTSockAddr1	
			CREATE_OBJECT	TRfcommSockAddr	TRfcommSockAddr1	
			COMMAND		TBTSockAddr1	Construct
			COMMAND		TBTSockAddr1	SetPort		BT-SOCK-ADDR-PublicApi-0040-001command2SetPort
			COMMAND		TBTSockAddr1	SetBTAddr		BT-SOCK-ADDR-PublicApi-0040-001command3SetBTAddr
			COMMAND		TRfcommSockAddr1	Construct		BT-SOCK-ADDR-PublicApi-0040-001command5Construct
			COMMAND		TRfcommSockAddr1	Family		BT-SOCK-ADDR-PublicApi-0040-001command6Family
			COMMAND		TRfcommSockAddr1	Port		BT-SOCK-ADDR-PublicApi-0040-001command7Port
			COMMAND		TRfcommSockAddr1	BTAddr		BT-SOCK-ADDR-PublicApi-0040-001command8BTAddr
	END_TEST_BLOCK
END_TESTCASE			BT-SOCK-ADDR-PublicApi-0040


DELAY		2000
